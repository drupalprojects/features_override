<?php

/**
 * Key to use when marking properties for recursion.
 */
define('FEATURES_OVERRIDE_RECURSION_MARKER', 'features_override_recursion_marker');

define('FEATURES_OVERRIDE_HOOK', 'features_override_default');

/**
 * Implements hook_features_api().
 */
function features_override_features_api() {
  return array(
    'features_override' => array(
      'name' => t('Feature Overrides'),
      'default_hook' => FEATURES_OVERRIDE_HOOK,
      'default_file' => FEATURES_DEFAULTS_INCLUDED_COMMON,
      'feature_source' => TRUE,
      'file' => drupal_get_path('module', 'features_override') . '/features_override.features.inc',
    ),
  );
}

/**
 * Implements hook_menu().
 */
function features_override_menu() {
  $items = array();
  $items['admin/structure/features/override/%/%'] = array(
    'title' => 'Overrides',
    'description' => 'Show override details for a component and element.',
    'page callback' => 'features_override_render_differences',
    'page arguments' => array(4, 5),
    'access callback' => 'user_access',
    'access arguments' => array('administer features'),
    'file' => "features_override.admin.inc",
    'weight' => 10,
  );

  return $items;
}

/**
 * Implements hook_features_override_ignore().
 */
function features_override_features_override_ignore($component) {
  // determine which keys need to be ignored for override diff for various components
  $ignores = array();
  switch ($component) {
    case 'views_view':
      $ignores['display_handler'] = 0;
      $ignores['handler'] = 2;
      $ignores['localization_plugin'] = 0;
      break;
  }
  return $ignores;
}

/**
 * Implements hook_modules_enabled().
 *
 * Revert the parent settings when the override module is enabled
 */
function features_override_modules_enabled($modules) {
  module_load_include('features.inc', 'features_override');
  module_load_include('export.inc', 'features');
  foreach ($modules as $module) {
    if (function_exists($module . '_features_override_default')) {
      features_override_features_rebuild($module);
    }
  }
}
