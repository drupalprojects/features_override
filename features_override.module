<?php

/**
 * @file
 * Module file for features overrides.
 * Includes core/contrib hook implementations.
 */
 
// Key to use when marking properties for recursion.
define('FEATURES_OVERRIDE_RECURSION_MARKER', 'features_override_recursion_marker');

/**
 * Implements hook_features_api().
 */
function features_override_features_api() {
  $path = drupal_get_path('module', 'features_override') . '/features_override.features.inc';
  return array(
    'features_override_items' => array(
      'name' => t('Feature Overrides group overrides'),
      'default_hook' => 'features_override_default_items',
      'default_file' => FEATURES_DEFAULTS_INCLUDED_COMMON,
      'feature_source' => TRUE,
      'file' => $path,
    ),
    'features_override_overrides' => array(
      'name' => t('Feature Overrides overrides (individual -- advanced)'),
      'default_hook' => 'features_override_default_overrides',
      'default_file' => FEATURES_DEFAULTS_INCLUDED_COMMON,
      'feature_source' => TRUE,
      'file' => $path,
    ),
  );
}

/**
 * Implements hook_menu().
 */
function features_override_menu() {
  $items = array();

  $items['admin/structure/features/override/%/%'] = array(
    'title' => 'Overrides',
    'description' => 'Show override details for a component and element.',
    'page callback' => 'features_override_render_differences',
    'page arguments' => array(4, 5),
    'access callback' => 'user_access',
    'access arguments' => array('administer features'),
    'file' => "features_override.admin.inc",
    'weight' => 10,
  );

  return $items;
}

/**
 * Implements hook_features_override_ignore().
 */
function features_override_features_override_ignore($component) {
  // Determine which keys need to be ignored for override diff for various components.
  $ignores = array();
  switch ($component) {
    case 'views_view':
      $ignores['display_handler'] = 0;
      $ignores['handler'] = 2;
      // Views automatically adds these two on export to set values.
      $ignores['api_version'] = 0;
      $ignores['disabled'] = 0;
      break;
    case 'image':
      $ignores['module'] = 0;
      $ignores['name'] = 0;
      $ignores['storage'] = 0;
      // Various properities are loaded into the effect in image_styles.
      $ignores['summary theme'] = 2;
      $ignores['module'] = 2;
      $ignores['label'] = 2;
      $ignores['help'] = 2;
      $ignores['form callback'] = 2;
      $ignores['effect callback'] = 2;
      $ignores['dimensions callback'] = 2;
      break;
  }
  return $ignores;
}

/**
 * Implements hook_modules_enabled().
 *
 * Revert the parent settings when the override module is enabled.
 */
function features_override_modules_enabled($modules) {
  module_load_include('features.inc', 'features_override');
  module_load_include('export.inc', 'features');
  foreach ($modules as $module) {
    if (function_exists($module . '_features_override_default')) {
      features_override_features_rebuild($module);
    }
  }
}
