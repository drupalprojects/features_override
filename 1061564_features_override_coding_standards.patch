diff --git a/features_override.alter.inc b/features_override.alter.inc
index 8f87651..b43f0d5 100644
--- a/features_override.alter.inc
+++ b/features_override.alter.inc
@@ -31,11 +31,11 @@ function _features_override_set_item(&$item, $action, $keys, $value = NULL, $ord
       _features_override_set_item($item->{$key['key']}, $action, $keys, $value, $order);
     }
     else {
-      switch($action) {
+      switch ($action) {
         case 'add':
           $item->{$key['key']} = $value;
           if (isset($order) && (array_keys((array)$item) !== range(0, count((array)$item) - 1))) {
-            $compare = create_function('$a,$b', '$order = '. var_export($order, TRUE) .'; $apos = array_search($a, $order); $bpos = array_search($b, $order); if ($apos == $bpos) return 0; return ($apos < $bpos) ? -1 : 1;');
+            $compare = create_function('$a,$b', '$order = ' . var_export($order, TRUE) . '; $apos = array_search($a, $order); $bpos = array_search($b, $order); if ($apos == $bpos) return 0; return ($apos < $bpos) ? -1 : 1;');
             $item = (array)$item;
             uksort($item, $compare);
             $item = (object)$item;
@@ -52,11 +52,11 @@ function _features_override_set_item(&$item, $action, $keys, $value = NULL, $ord
       _features_override_set_item($item[$key['key']], $action, $keys, $value, $order);
     }
     else {
-      switch($action) {
+      switch ($action) {
         case 'add':
           $item[$key['key']] = $value;
           if (isset($order) && (array_keys($item) !== range(0, count($item) - 1))) {
-            $compare = create_function('$a,$b', '$order = '. var_export($order, TRUE) .'; $apos = array_search($a, $order); $bpos = array_search($b, $order); if ($apos == $bpos) return 0; return ($apos < $bpos) ? -1 : 1;');
+            $compare = create_function('$a,$b', '$order = ' . var_export($order, TRUE) . '; $apos = array_search($a, $order); $bpos = array_search($b, $order); if ($apos == $bpos) return 0; return ($apos < $bpos) ? -1 : 1;');
             uksort($item, $compare);
           }
           break;
diff --git a/features_override.extend.inc b/features_override.extend.inc
index b3c3d99..33e99b7 100755
--- a/features_override.extend.inc
+++ b/features_override.extend.inc
@@ -8,8 +8,8 @@ function features_override_extend() {
   $form = array();
   $compontents = array();
   foreach (features_get_components() as $component => $info) {
-    if (isset($info['default_hook']) && 
-      (!isset($info['module']) || $info['module'] != 'features_override') && 
+    if (isset($info['default_hook']) &&
+      (!isset($info['module']) || $info['module'] != 'features_override') &&
       // No hook_node_info_alter().
       $info['default_hook'] != 'node_info' &&
       !module_hook('features_override', $info['default_hook'] . '_alter')) {
@@ -45,19 +45,19 @@ function features_override_extend_submit() {
 function features_override_generate() {
   $files = array();
   foreach (features_get_components() as $component => $info) {
-    if (isset($info['default_hook']) && 
-      (!isset($info['module']) || $info['module'] != 'features_override') && 
+    if (isset($info['default_hook']) &&
+      (!isset($info['module']) || $info['module'] != 'features_override') &&
       $info['default_hook'] != 'node_info' &&
       !module_hook('features_override', $info['default_hook'] . '_alter')) {
-      // Assign any component that doesn't specify a module to the features 
+      // Assign any component that doesn't specify a module to the features
       // module.
       $module = isset($info['module']) ? $info['module'] : 'features';
       $code = array();
       $code[] = "/**";
-      $code[] = " * Implementation of hook_{$info['default_hook']}_alter().";
+      $code[] = " * Implements hook_{$info['default_hook']}_alter().";
       $code[] = " */";
-      $code[] = 'function features_override_'. $info['default_hook'] .'_alter(&$items) {';
-      $code[] = '  features_override_features_default_alter($items, "' . $component .'");';
+      $code[] = 'function features_override_' . $info['default_hook'] . '_alter(&$items) {';
+      $code[] = '  features_override_features_default_alter($items, "' . $component . '");';
       $code[] = "}";
       $code = implode("\n", $code);
       $files[$module][] = $code;
diff --git a/features_override.install b/features_override.install
index 3eeaa83..f42811a 100644
--- a/features_override.install
+++ b/features_override.install
@@ -1,7 +1,7 @@
 <?php
 
 /**
- * Implementation of hook_schema()
+ * Implements hook_schema().
  */
 function features_override_schema() {
   $schema = array();
diff --git a/features_override.module b/features_override.module
index bf24a54..f087fca 100644
--- a/features_override.module
+++ b/features_override.module
@@ -16,7 +16,7 @@ define('FEATURES_OVERRIDE_REQUIRED_CTOOLS_API', '1.7');
 define('FEATURES_OVERRIDE_RECURSION_MARKER', 'features_override_recursion_marker');
 
 /**
- * Implementation of hook_init().
+ * Implements hook_init().
  */
 function features_override_init() {
   module_load_include('inc', 'features_override', 'features_override.alter');
@@ -27,7 +27,7 @@ function features_override_init() {
 }
 
 /**
- * Implementation of hook_menu().
+ * Implements hook_menu().
  */
 function features_override_menu() {
   $items = array();
@@ -45,7 +45,7 @@ function features_override_menu() {
 }
 
 /**
- * Implementation of hook_menu_alter().
+ * Implements hook_menu_alter().
  */
 function features_override_menu_alter(&$items) {
   if (isset($items['admin/structure/features/features-override'])) {
@@ -55,7 +55,7 @@ function features_override_menu_alter(&$items) {
 }
 
 /**
- * Implementation of hook_ctools_plugin_api().
+ * Implements hook_ctools_plugin_api().
  */
 function features_override_ctools_plugin_api($module, $api) {
   if ($module == 'features_override' && $api == 'plugins') {
@@ -64,7 +64,7 @@ function features_override_ctools_plugin_api($module, $api) {
 }
 
 /**
- * Implementation of hook_ctools_plugin_directory().
+ * Implements hook_ctools_plugin_directory().
  */
 function features_override_ctools_plugin_directory($module, $type) {
   // Safety: go away if CTools is not at an appropriate version.
@@ -264,7 +264,7 @@ function features_override_features_export($data, &$export, $module_name = "") {
     $export['dependencies'] = array();
   }
 
-  foreach($data as $component) {
+  foreach ($data as $component) {
     // This function will only be called in the context of a features export so we can assume ctools export.inc
     // has been loaded.
     $component = ctools_export_crud_load('features_override', $component);
@@ -284,7 +284,7 @@ function features_override_features_export_options() {
     $map = features_get_component_map();
     foreach ($options as $option) {
       $component = ctools_export_crud_load('features_override', $option);
-       if (isset($map[$component->component_type]) && isset($map[$component->component_type][$component->component_id] ) && in_array($current_feature->name, $map[$component->component_type][$component->component_id])) {
+      if (isset($map[$component->component_type]) && isset($map[$component->component_type][$component->component_id] ) && in_array($current_feature->name, $map[$component->component_type][$component->component_id])) {
         unset($options[$option]);
       }
     }
@@ -332,7 +332,7 @@ function features_override_export($alters) {
 
 
 /**
- * Add a variable to the hive of arrays and objects which 
+ * Add a variable to the hive of arrays and objects which
  * are tracked for whether they have recursive entries
  *
  * @param &$bee
@@ -363,7 +363,7 @@ function _features_override_hive(&$bee = NULL) {
  */
 function _features_override_leave_hive() {
   $hive = _features_override_hive();
-  foreach($hive as $i => $bee){
+  foreach ($hive as $i => $bee) {
     $recursion_marker = FEATURES_OVERRIDE_RECURSION_MARKER;
     if (is_object($bee)) {
       unset($hive[$i]->$recursion_marker);
@@ -383,8 +383,8 @@ function _features_override_recursion_marker(&$normal, $object) {
   // prevent endless recursion loops.
   $recursion_marker = FEATURES_OVERRIDE_RECURSION_MARKER;
   $r = ($object)
-	  ? @$normal->$recursion_marker
-	  : @$normal[$recursion_marker] ;
+    ? @$normal->$recursion_marker
+    : @$normal[$recursion_marker] ;
   $r = (integer) $r;
   return $r;
 }
diff --git a/modules/boxes.features_override.inc b/modules/boxes.features_override.inc
index e6ab66c..8a6d072 100644
--- a/modules/boxes.features_override.inc
+++ b/modules/boxes.features_override.inc
@@ -1,7 +1,7 @@
 <?php
 
 /**
- * Implementation of hook_default_box_alter().
+ * Implements hook_default_box_alter().
  */
 function features_override_default_box_alter(&$items) {
   features_override_features_default_alter($items, "box");
diff --git a/modules/captcha.features_override.inc b/modules/captcha.features_override.inc
index 74c3f9d..d9d369a 100755
--- a/modules/captcha.features_override.inc
+++ b/modules/captcha.features_override.inc
@@ -1,7 +1,7 @@
 <?php
 
 /**
- * Implementation of hook_captcha_default_points_alter().
+ * Implements hook_captcha_default_points_alter().
  */
 function features_override_captcha_default_points_alter(&$items) {
   features_override_features_default_alter($items, "captcha_points");
diff --git a/modules/context.features_override.inc b/modules/context.features_override.inc
index 9ae43e6..b0c8c25 100755
--- a/modules/context.features_override.inc
+++ b/modules/context.features_override.inc
@@ -1,7 +1,7 @@
 <?php
 
 /**
- * Implementation of hook_context_default_contexts_alter().
+ * Implements hook_context_default_contexts_alter().
  */
 function features_override_context_default_contexts_alter(&$items) {
   features_override_features_default_alter($items, "context");
diff --git a/modules/features.features_override.inc b/modules/features.features_override.inc
index 1228ec4..3950ae0 100644
--- a/modules/features.features_override.inc
+++ b/modules/features.features_override.inc
@@ -1,119 +1,119 @@
 <?php
 
 /**
- * Implementation of hook_default_wysiwyg_profile_alter().
+ * Implements hook_default_wysiwyg_profile_alter().
  */
 function features_override_default_wysiwyg_profile_alter(&$items) {
   features_override_features_default_alter($items, "wysiwyg_profile");
 }
 
 /**
- * Implementation of hook_field_default_fields_alter().
+ * Implements hook_field_default_fields_alter().
  */
 function features_override_field_default_fields_alter(&$items) {
   features_override_features_default_alter($items, "field");
 }
 
 /**
- * Implementation of hook_filter_default_formats_alter().
+ * Implements hook_filter_default_formats_alter().
  */
 function features_override_filter_default_formats_alter(&$items) {
   features_override_features_default_alter($items, "filter");
 }
 
 /**
- * Implementation of hook_image_default_styles_alter().
+ * Implements hook_image_default_styles_alter().
  */
 function features_override_image_default_styles_alter(&$items) {
   features_override_features_default_alter($items, "image");
 }
 
 /**
- * Implementation of hook_menu_default_menu_custom_alter().
+ * Implements hook_menu_default_menu_custom_alter().
  */
 function features_override_menu_default_menu_custom_alter(&$items) {
   features_override_features_default_alter($items, "menu_custom");
 }
 
 /**
- * Implementation of hook_menu_default_menu_links_alter().
+ * Implements hook_menu_default_menu_links_alter().
  */
 function features_override_menu_default_menu_links_alter(&$items) {
   features_override_features_default_alter($items, "menu_links");
 }
 
 /**
- * Implementation of hook_menu_default_items_alter().
+ * Implements hook_menu_default_items_alter().
  */
 function features_override_menu_default_items_alter(&$items) {
   features_override_features_default_alter($items, "menu");
 }
 
 /**
- * Implementation of hook_taxonomy_default_vocabularies_alter().
+ * Implements hook_taxonomy_default_vocabularies_alter().
  */
 function features_override_taxonomy_default_vocabularies_alter(&$items) {
   features_override_features_default_alter($items, "taxonomy");
 }
 
 /**
- * Implementation of hook_user_default_roles_alter().
+ * Implements hook_user_default_roles_alter().
  */
 function features_override_user_default_roles_alter(&$items) {
   features_override_features_default_alter($items, "user_role");
 }
 
 /**
- * Implementation of hook_user_default_permissions_alter().
+ * Implements hook_user_default_permissions_alter().
  */
 function features_override_user_default_permissions_alter(&$items) {
   features_override_features_default_alter($items, "user_permission");
 }
 
 /**
- * Implementation of hook_default_search_api_server_alter().
+ * Implements hook_default_search_api_server_alter().
  */
 function features_override_default_search_api_server_alter(&$items) {
   features_override_features_default_alter($items, "search_api_server");
 }
 
 /**
- * Implementation of hook_default_search_api_index_alter().
+ * Implements hook_default_search_api_index_alter().
  */
 function features_override_default_search_api_index_alter(&$items) {
   features_override_features_default_alter($items, "search_api_index");
 }
 
 /**
- * Implementation of hook_default_search_api_facet_alter().
+ * Implements hook_default_search_api_facet_alter().
  */
 function features_override_default_search_api_facet_alter(&$items) {
   features_override_features_default_alter($items, "search_api_facet");
 }
 
 /**
- * Implementation of hook_flag_default_flags_alter().
+ * Implements hook_flag_default_flags_alter().
  */
 function features_override_flag_default_flags_alter(&$items) {
   features_override_features_default_alter($items, "flag");
 }
 
 /**
- * Implementation of hook_commerce_product_default_types_alter().
+ * Implements hook_commerce_product_default_types_alter().
  */
 function features_override_commerce_product_default_types_alter(&$items) {
   features_override_features_default_alter($items, "commerce_product_type");
 }
 
 /**
- * Implementation of hook_default_og_membership_type_alter().
+ * Implements hook_default_og_membership_type_alter().
  */
 function features_override_default_og_membership_type_alter(&$items) {
   features_override_features_default_alter($items, "og_membership_type");
 }
 
 /**
- * Implementation of hook_default_profile2_type_alter().
+ * Implements hook_default_profile2_type_alter().
  */
 function features_override_default_profile2_type_alter(&$items) {
   features_override_features_default_alter($items, "profile2_type");
diff --git a/modules/heartbeat.features_override.inc b/modules/heartbeat.features_override.inc
index 565acc1..244a2d0 100644
--- a/modules/heartbeat.features_override.inc
+++ b/modules/heartbeat.features_override.inc
@@ -1,14 +1,14 @@
 <?php
 
 /**
- * Implementation of hook_heartbeat_stream_info_alter().
+ * Implements hook_heartbeat_stream_info_alter().
  */
 function features_override_heartbeat_stream_info_alter(&$items) {
   features_override_features_default_alter($items, "heartbeat_streams");
 }
 
 /**
- * Implementation of hook_heartbeat_template_info_alter().
+ * Implements hook_heartbeat_template_info_alter().
  */
 function features_override_heartbeat_template_info_alter(&$items) {
   features_override_features_default_alter($items, "heartbeat_messages");
diff --git a/modules/page_manager.features_override.inc b/modules/page_manager.features_override.inc
index c48d538..06a4cfa 100644
--- a/modules/page_manager.features_override.inc
+++ b/modules/page_manager.features_override.inc
@@ -1,14 +1,14 @@
 <?php
 
 /**
- * Implementation of hook_default_page_manager_handlers_alter().
+ * Implements hook_default_page_manager_handlers_alter().
  */
 function features_override_default_page_manager_handlers_alter(&$items) {
   features_override_features_default_alter($items, "page_manager_handlers");
 }
 
 /**
- * Implementation of hook_default_page_manager_pages_alter().
+ * Implements hook_default_page_manager_pages_alter().
  */
 function features_override_default_page_manager_pages_alter(&$items) {
   features_override_features_default_alter($items, "page_manager_pages");
diff --git a/modules/panels.features_override.inc b/modules/panels.features_override.inc
index b8d6b2e..b5fbd08 100644
--- a/modules/panels.features_override.inc
+++ b/modules/panels.features_override.inc
@@ -1,14 +1,14 @@
 <?php
 
 /**
- * Implementation of hook_default_panels_renderer_pipeline_alter().
+ * Implements hook_default_panels_renderer_pipeline_alter().
  */
 function features_override_default_panels_renderer_pipeline_alter(&$items) {
   features_override_features_default_alter($items, "panels_renderer_pipeline");
 }
 
 /**
- * Implementation of hook_default_panels_layout_alter().
+ * Implements hook_default_panels_layout_alter().
  */
 function features_override_default_panels_layout_alter(&$items) {
   features_override_features_default_alter($items, "panels_layout");
diff --git a/modules/panels_mini.features_override.inc b/modules/panels_mini.features_override.inc
index 98826ce..3fa4f4f 100644
--- a/modules/panels_mini.features_override.inc
+++ b/modules/panels_mini.features_override.inc
@@ -1,7 +1,7 @@
 <?php
 
 /**
- * Implementation of hook_default_panels_mini_alter().
+ * Implements hook_default_panels_mini_alter().
  */
 function features_override_default_panels_mini_alter(&$items) {
   features_override_features_default_alter($items, "panels_mini");
diff --git a/modules/strongarm.features_override.inc b/modules/strongarm.features_override.inc
index 3bad170..4701c9b 100755
--- a/modules/strongarm.features_override.inc
+++ b/modules/strongarm.features_override.inc
@@ -1,7 +1,7 @@
 <?php
 
 /**
- * Implementation of hook_strongarm_alter().
+ * Implements hook_strongarm_alter().
  */
 function features_override_strongarm_alter(&$items) {
   features_override_features_default_alter($items, "variable");
diff --git a/modules/views.features_override.inc b/modules/views.features_override.inc
index 1b5a4b2..f67ba75 100755
--- a/modules/views.features_override.inc
+++ b/modules/views.features_override.inc
@@ -1,7 +1,7 @@
 <?php
 
 /**
- * Implementation of hook_views_default_views_alter().
+ * Implements hook_views_default_views_alter().
  */
 function features_override_views_default_views_alter(&$items) {
   features_override_features_default_alter($items, "views");
